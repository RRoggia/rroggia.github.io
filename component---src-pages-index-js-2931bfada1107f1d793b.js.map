{"version":3,"file":"component---src-pages-index-js-2931bfada1107f1d793b.js","mappings":"2NAGO,SAASA,EAAwBC,GAEtC,OAD2CA,EAAhB,kBAAIC,MAClBC,KAAI,SAACC,GAAI,wBAEfA,EAAKA,KAAKC,YAAY,CACzB,QAAWD,EAAKA,KAAKE,QACrB,WAAcF,EAAKA,KAAKG,WACxB,KCVkCC,EDUZJ,EAAKA,KAAKC,YAAYG,MCT1C,UAAWA,EAAMC,cAAcC,QAAS,uEAAQ,QADzC,IAAyBF,CDUgB,GAGxD,CAEO,SAASG,EAAyBV,GAEvC,OAD2CA,EAAhB,kBAAIC,MAClBC,KAAI,SAACC,GAAI,8BACjBA,EAAKA,KAAKC,YAAY,CACzB,KAAiB,QAAX,EAAED,EAAKA,YAAI,aAAT,EAAWQ,KACnB,KAAOC,EAAAA,EAAAA,GAAeT,EAAKA,KAAKC,YAAYG,QAAM,GAEtD,CAEO,SAASM,EAA8BC,EAAUC,GAKtD,OAJKD,EAASC,EAAKC,UACjBF,EAASC,EAAKC,QAAU,IAE1BF,EAASC,EAAKC,QAAQC,KAAKF,GACpBD,CACT,C,uBE9Be,SAASI,EAAgBX,GACtC,MAAM,UAAWA,EAAMC,cAAcC,QAAS,uEAAQ,IACxD,C,qICCMU,EAAOC,EAAAA,QAAAA,IAAAA,WAAU,6DAAVA,CAAU,8PAoBjBC,EAAOD,EAAAA,QAAAA,IAAAA,WAAU,6DAAVA,CAAU,iDAKjBE,EAAQF,EAAAA,QAAAA,GAAAA,WAAS,8DAATA,CAAS,uCAKjBG,EAAiBH,EAAAA,QAAAA,EAAAA,WAAQ,uEAARA,CAAQ,wCAKzBI,EAAiBJ,EAAAA,QAAAA,KAAAA,WAAW,uEAAXA,CAAW,uFAQnB,SAASK,EAAY,GAA8C,IAA3ClB,EAAK,EAALA,MAAOF,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYoB,EAAG,EAAHA,IAAKC,EAAI,EAAJA,KACtE,OACE,qBAAGC,KAAOF,GACR,gBAACP,EAAI,KACH,gBAACE,EAAI,KACH,gBAACC,EAAK,KAAEf,GAAc,gBAACiB,EAAc,KAAGlB,EAAU,aAEpD,yBAAID,GACJ,gBAACkB,EAAc,kBAAgBI,IAIvC,CCrDA,IAAME,EAAUT,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,iCAKX,SAASU,EAAM,GAAc,IAAXC,EAAK,EAALA,MAC/B,OACE,gBAACF,EAAO,KACN,4CACGE,EAECA,EAAM7B,KAAK,SAAA8B,GAAC,OACZ,gBAACP,EAAW,eACVQ,IAAMD,EAAEzB,OACHyB,GACL,IALF,+CAQV,C,cCPA,EAVkB,SAAH,GAAkB,IAAZhC,EAAI,EAAJA,KACb+B,GAAQhC,EAAAA,EAAAA,IAAwBC,GAEtC,OACE,gBAACkC,EAAA,EAAQ,KACP,gBAACJ,EAAK,CAACC,MAAOA,IAGpB,C","sources":["webpack://rroggia.github.io/./src/allMarkdownRemarkTransformation.js","webpack://rroggia.github.io/./src/components/Posts/postPath.js","webpack://rroggia.github.io/./src/components/Notes/notePath.js","webpack://rroggia.github.io/./src/components/Posts/PostPreview.js","webpack://rroggia.github.io/./src/components/Posts/Posts.js","webpack://rroggia.github.io/./src/pages/index.js"],"sourcesContent":["import createPostPath from './components/Posts/postPath'\nimport createNotePath from './components/Notes/notePath'\n\nexport function allMarkdownRemarkToPost(data) {\n  const { 'allMarkdownRemark': { edges } } = data\n  return edges.map((node) => (\n    {\n      ...node.node.frontmatter,\n      'excerpt': node.node.excerpt,\n      'timeToRead': node.node.timeToRead,\n      'url': createPostPath(node.node.frontmatter.title)\n    }\n  ))\n}\n\nexport function allMarkdownRemarkToNotes(data) {\n  const { 'allMarkdownRemark': { edges } } = data\n  return edges.map((node) => ({\n    ...node.node.frontmatter,\n    'html': node.node?.html,\n    'url': createNotePath(node.node.frontmatter.title)\n  }))\n}\n\nexport function transformNotesByReadingStatus(byStatus, note) {\n  if (!byStatus[note.status]) {\n    byStatus[note.status] = []\n  }\n  byStatus[note.status].push(note)\n  return byStatus\n}","export default function createPostPath( title ) {\n  return `/posts/${title.toLowerCase().replace( /\\s/ug, '-' )}`\n}\n","export default function createPostPath( title ) {\n  return `/notes/${title.toLowerCase().replace( /\\s/ug, '-' )}`\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Card = styled.div`\n  margin-bottom: 1.5rem;\n  padding: 2rem;\n  border-radius: 0.3rem;\n  border: 1px solid;\n\tborder-color: #d0d7de;\n  align:center;\n\n  &:hover {\n    transform: scale(1.005, 1.005);\n  }\n\n  @media (max-width: 600px) {\n    &:hover, &:active {\n      transform: scale(1.005, 1.005);\n      box-shadow: 10px 10px lightgray;        \n    }\n  }\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n`\n\nconst Title = styled.h2`\n  display: inline;\n  margin-right: 1rem; \n`\n\nconst TextAlignRight = styled.p`\n  text-align: right;\n  font-size: 0.8rem;\n`\n\nconst SpanAlignRight = styled.span`\n  margin: auto;\n  margin-right: 0px;\n  align-item: center;\n  text-align: right;\n  font-size: 0.8rem;\n`\n\nexport default function PostPreview( { title, excerpt, timeToRead, url, date } ) {\n  return (\n    <a href={ url }>\n      <Card>\n        <Grid>\n          <Title>{title}</Title><SpanAlignRight>{ timeToRead } minutes</SpanAlignRight>\n        </Grid>\n        <p>{excerpt}</p>\n        <TextAlignRight>{ `Published ${date}` }</TextAlignRight>\n      </Card>\n    </a>\n  )\n}\n","/* eslint-disable id-length */\nimport React from 'react'\nimport styled from 'styled-components'\nimport PostPreview from './PostPreview.js'\n\nconst Wrapper = styled.div`\n  width: 85%;\n  margin: 2rem auto;\n`\n\nexport default function Posts( { posts } ) {\n  return (\n    <Wrapper>\n      <h2>Dear diary ...</h2>\n      { !posts\n        ? <p>No post was found.</p>\n        : posts.map( p => (\n          <PostPreview\n            key={ p.title }\n            { ...p }\n          /> ) ) }\n    </Wrapper>\n  )\n}\n\n","import React from 'react'\nimport BasePage from '../components/Base/BasePage'\nimport Posts from '../components/Posts/Posts'\nimport { graphql } from 'gatsby'\nimport { allMarkdownRemarkToPost } from '../allMarkdownRemarkTransformation'\n\nconst IndexPage = ({ data }) => {\n  const posts = allMarkdownRemarkToPost(data)\n\n  return (\n    <BasePage>\n      <Posts posts={posts} />\n    </BasePage>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\nquery {\n  allMarkdownRemark(filter: {fileAbsolutePath: {glob: \"**/posts/**\"}}, sort: {order: DESC, fields: [frontmatter___date]}) {\n    edges {\n      node {\n        frontmatter {\n          title\n          date\n        }\n        excerpt\n        timeToRead\n      }\n    }\n  }\n}`\n\n"],"names":["allMarkdownRemarkToPost","data","edges","map","node","frontmatter","excerpt","timeToRead","title","toLowerCase","replace","allMarkdownRemarkToNotes","html","createNotePath","transformNotesByReadingStatus","byStatus","note","status","push","createPostPath","Card","styled","Grid","Title","TextAlignRight","SpanAlignRight","PostPreview","url","date","href","Wrapper","Posts","posts","p","key","BasePage"],"sourceRoot":""}