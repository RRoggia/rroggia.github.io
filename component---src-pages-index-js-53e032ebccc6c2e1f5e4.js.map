{"version":3,"file":"component---src-pages-index-js-53e032ebccc6c2e1f5e4.js","mappings":"2MAGMA,EAAOC,EAAAA,QAAAA,IAAAA,WAAU,6DAAVA,CAAU,8PAoBjBC,EAAOD,EAAAA,QAAAA,IAAAA,WAAU,6DAAVA,CAAU,iDAKjBE,EAAQF,EAAAA,QAAAA,GAAAA,WAAS,8DAATA,CAAS,uCAKjBG,EAAiBH,EAAAA,QAAAA,EAAAA,WAAQ,uEAARA,CAAQ,wCAKzBI,EAAiBJ,EAAAA,QAAAA,KAAAA,WAAW,uEAAXA,CAAW,uFAQnB,SAASK,EAAY,GAA8C,IAA3CC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAG,EAAHA,IAAKC,EAAI,EAAJA,KACtE,OACE,qBAAGC,KAAOF,GACR,gBAACV,EAAI,KACH,gBAACE,EAAI,KACH,gBAACC,EAAK,KAAEI,GAAc,gBAACF,EAAc,KAAGI,EAAU,aAEpD,yBAAID,GACJ,gBAACJ,EAAc,kBAAgBO,IAIvC,CCrDA,IAAME,EAAUZ,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,iCAKX,SAASa,EAAM,GAAc,IAAXC,EAAK,EAALA,MAC/B,OACE,gBAACF,EAAO,KACN,4CACGE,EAECA,EAAMC,KAAK,SAAAC,GAAC,OACZ,gBAACX,EAAW,eACVY,IAAMD,EAAEV,OACHU,GACL,IALF,+CAQV,CCjBA,SAASE,EAAYC,GACnB,OAAO,OAAP,UACKA,EAAKA,KAAKC,YAAY,CACzB,QAAWD,EAAKA,KAAKZ,QACrB,WAAcY,EAAKA,KAAKX,WACxB,KCXoCF,EDWba,EAAKA,KAAKC,YAAYd,MCVzC,UAAWA,EAAMe,cAAcC,QAAS,uEAAQ,QADzC,IAAyBhB,CDaxC,CAEA,IAWA,EAXkB,SAAH,GAAoB,IAE3BQ,EAFkB,EAAJS,KACO,kBAAIC,MACXT,IAAKG,GAEzB,OACE,gBAACO,EAAA,EAAQ,KACP,gBAACZ,EAAK,CAACC,MAAQA,IAGrB,C","sources":["webpack://rroggia.github.io/./src/components/Posts/PostPreview.js","webpack://rroggia.github.io/./src/components/Posts/Posts.js","webpack://rroggia.github.io/./src/pages/index.js","webpack://rroggia.github.io/./src/components/Posts/postPath.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Card = styled.div`\n  margin-bottom: 1.5rem;\n  padding: 2rem;\n  border-radius: 0.3rem;\n  border: 1px solid;\n\tborder-color: #d0d7de;\n  align:center;\n\n  &:hover {\n    transform: scale(1.005, 1.005);\n  }\n\n  @media (max-width: 600px) {\n    &:hover, &:active {\n      transform: scale(1.005, 1.005);\n      box-shadow: 10px 10px lightgray;        \n    }\n  }\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n`\n\nconst Title = styled.h2`\n  display: inline;\n  margin-right: 1rem; \n`\n\nconst TextAlignRight = styled.p`\n  text-align: right;\n  font-size: 0.8rem;\n`\n\nconst SpanAlignRight = styled.span`\n  margin: auto;\n  margin-right: 0px;\n  align-item: center;\n  text-align: right;\n  font-size: 0.8rem;\n`\n\nexport default function PostPreview( { title, excerpt, timeToRead, url, date } ) {\n  return (\n    <a href={ url }>\n      <Card>\n        <Grid>\n          <Title>{title}</Title><SpanAlignRight>{ timeToRead } minutes</SpanAlignRight>\n        </Grid>\n        <p>{excerpt}</p>\n        <TextAlignRight>{ `Published ${date}` }</TextAlignRight>\n      </Card>\n    </a>\n  )\n}\n","/* eslint-disable id-length */\nimport React from 'react'\nimport styled from 'styled-components'\nimport PostPreview from './PostPreview.js'\n\nconst Wrapper = styled.div`\n  width: 85%;\n  margin: 2rem auto;\n`\n\nexport default function Posts( { posts } ) {\n  return (\n    <Wrapper>\n      <h2>Dear diary ...</h2>\n      { !posts\n        ? <p>No post was found.</p>\n        : posts.map( p => (\n          <PostPreview\n            key={ p.title }\n            { ...p }\n          /> ) ) }\n    </Wrapper>\n  )\n}\n\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport BasePage from '../components/Base/BasePage'\nimport Posts from '../components/Posts/Posts'\nimport createPostPath from '../components/Posts/postPath'\n\nfunction nodeToPost( node ) {\n  return {\n    ...node.node.frontmatter,\n    'excerpt': node.node.excerpt,\n    'timeToRead': node.node.timeToRead,\n    'url': createPostPath( node.node.frontmatter.title )\n  }\n}\n\nconst IndexPage = ( { data } ) => {\n  const { 'allMarkdownRemark': { edges } } = data\n  const posts = edges.map( nodeToPost )\n\n  return (\n    <BasePage>\n      <Posts posts={ posts } />\n    </BasePage>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: {fileAbsolutePath: {glob: \"**/posts/**\"}}, sort: {order: DESC, fields: [frontmatter___date]}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\n","export default function createPostPath( title ) {\n  return `/posts/${title.toLowerCase().replace( /\\s/ug, '-' )}`\n}\n"],"names":["Card","styled","Grid","Title","TextAlignRight","SpanAlignRight","PostPreview","title","excerpt","timeToRead","url","date","href","Wrapper","Posts","posts","map","p","key","nodeToPost","node","frontmatter","toLowerCase","replace","data","edges","BasePage"],"sourceRoot":""}