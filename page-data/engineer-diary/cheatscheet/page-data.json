{
    "componentChunkName": "component---src-templates-folder-template-js",
    "path": "/engineer-diary/cheatscheet",
    "result": {"pageContext":{"parentPath":"/engineer-diary/cheatscheet","files":[{"fileAbsolutePath":"/home/runner/work/rroggia.github.io/rroggia.github.io/content/engineer-diary/cheatscheet/vim.md","html":"<h1>Normal Mode</h1>\n<p>Follows this structure <code>(number) Operator + (number) motion</code></p>\n<h2>Navigating with motions</h2>\n<p>Moving cursor:</p>\n<ul>\n<li><code>k</code> : Up</li>\n<li><code>h</code>: Down</li>\n<li><code>l</code>: Right</li>\n<li><code>j</code>: Left</li>\n<li><code>0</code>: Begin of the line</li>\n<li><code>$</code>: End of the line</li>\n<li><code>b</code>: Previous word</li>\n<li><code>w</code>: Next word</li>\n<li><code>e</code>: Next end of word</li>\n<li><code>%</code>: Matching <code>()</code>, <code>{}</code>or <code>[]</code> </li>\n<li><code>gg</code>: Begin of the file</li>\n<li><code>G</code>: end of the file</li>\n<li><code>ctrl + o</code>: Goes back to where you came</li>\n<li><code>ctrl + i</code>: Goes forward from where you came</li>\n<li>\n<p>Multi visual line</p>\n<ul>\n<li><code>gj</code>: Down</li>\n<li><code>gk</code>: Up</li>\n<li><code>g0</code>: Begin of the line</li>\n<li><code>g$</code>: End of the line</li>\n</ul>\n</li>\n</ul>\n<h2>Text Manipulation</h2>\n<h3>Deletion Operator</h3>\n<ul>\n<li>\n<p><code>x</code>: Char on cursor</p>\n<ul>\n<li><code>xp</code>: Transpose character (delete + paste)</li>\n</ul>\n</li>\n<li>\n<p><code>d</code>: Delete motion</p>\n<ul>\n<li><code>dd</code>: Deletes the whole line</li>\n<li><code>ddp</code>: Transpose line (delete line + paste below)</li>\n<li><code>dap</code>: Delete Text Object Paragraph</li>\n<li><code>daw</code>: Delete Text Object Word</li>\n<li>Combined with common Motions:</li>\n<li><code>dw</code>: Next word of the cursor</li>\n<li><code>d$</code>: Deletes cursor to the end of line</li>\n<li><code>d0</code>: Deletes cursor to the begin of the line</li>\n</ul>\n</li>\n</ul>\n<h3>Undo/Redo</h3>\n<ul>\n<li><code>u</code> : undo last command</li>\n<li><code>U</code>: undo all changes in line</li>\n<li><code>r</code>: redo last command</li>\n</ul>\n<h3>Copy/Paste</h3>\n<ul>\n<li>\n<p><code>y</code>: Copy (Yank)</p>\n<ul>\n<li><code>yw</code>: Copy word (stores in the unnamed registry)</li>\n<li><code>yy</code>: Copy line</li>\n<li><code>\"ayw</code> : Copy word to the registry named a</li>\n</ul>\n</li>\n<li><code>p</code>: Paste after cursor</li>\n<li><code>P</code>: Paste before cursor</li>\n</ul>\n<p>Common Registries:</p>\n<ul>\n<li><code>\"_</code>: Black Hole. Use when you don't want to store information in the unnamed registry.</li>\n<li><code>\"%</code> Name of the current file</li>\n<li><code>\"#</code> Name of the alternate file</li>\n<li><code>\".</code> Last inserted text</li>\n</ul>\n<p>Use command <code>:reg</code> to see the values in each register.</p>\n<h2>Search</h2>\n<ul>\n<li><code>/</code>: Followed by the word you want to search</li>\n<li><code>?</code>: Searches backwards. Followed by the word you want to search</li>\n<li><code>n</code>: Next item in search</li>\n<li><code>N</code>: Previous item in search</li>\n<li><code>*</code> Searches for the word in the cursor</li>\n</ul>\n<p>It can be used with other operators:</p>\n<ul>\n<li><code>d/renan</code> : Deletes  from the cursor up to the word renan</li>\n<li><code>c/renan</code>: Changes from the cursor up to the word renan</li>\n</ul>\n<h3>Search character in line</h3>\n<ul>\n<li><code>f</code>: Followed by the character you want to search. Cursor on the char.</li>\n<li><code>t</code>: Followed by the character you want to search. Cursor before the char.</li>\n<li><code>F</code> Followed by the character you want to search. Backwards. Cursor on the char.</li>\n<li><code>T</code>: Followed by the character you want to search. Backwards. Cursor before the char.</li>\n<li><code>;</code> goes to the next occurrence</li>\n<li><code>,</code> goes back to the previous occurrence</li>\n</ul>\n<p>It can be used with other operators.</p>\n<h2>Changing modes</h2>\n<h3>To Insert Mode</h3>\n<p>From normal to insert mode:</p>\n<ul>\n<li><code>i</code>: Cursor in the current position</li>\n<li><code>a</code>: After the Cursor current position</li>\n<li><code>A</code>: Cursor in the end of the line</li>\n<li><code>o</code>: Opens a new line. Cursor in the line below</li>\n<li><code>O</code>: Opens a new line. Cursor in the line above</li>\n</ul>\n<h3>To Replace Mode</h3>\n<ul>\n<li><code>R</code>: Moves to replace mode</li>\n</ul>\n<h3>To Visual Mode</h3>\n<ul>\n<li><code>v</code>: Moves to visual mode</li>\n</ul>\n<h1>Insert Mode</h1>\n<h1>Command Mode</h1>\n<p><code>:w FILENAME</code> saves to disk</p>\n<p><code>:r FILENAME</code> retrieves files from disk and paste\n<code>:r !command</code> executes command and paste output</p>\n<p><code>:jumps</code> to see the jumps history in the file and other files </p>\n<ul>\n<li>as a hack you can use <code>u + ctrl - r</code> to jump to latest change in the file\n<code>:changes</code> use changes to see the list of modifications in the current file in the current file</li>\n<li><code>g.</code> or <code>g;</code> to move the cursor to the changelist history\n<code>:marks</code> to see the marks created</li>\n</ul>\n<p>substitute command\n<code>:s/old/new</code> or <code>:s/old/new/g</code> to replace one match or all matches inline</p>\n<p><code>:%s/old/new/g</code> replaces all matches in the file\n<code>:%s/old/new/gc</code> replaces all matches asking individually</p>","frontmatter":{"title":""},"isFile":true,"fileName":"vim"}],"folders":[]}},
    "staticQueryHashes": ["1507822185","2095566405","2894216461","425755332"]}