{"componentChunkName":"component---src-templates-note-template-js","path":"/notes/the-kubernetes-book","result":{"data":{"markdownRemark":{"frontmatter":{"title":"The Kubernetes Book","date":"2022-07-06","published":null,"tags":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#2-kubernetes-principles-of-operation\">2 Kubernetes principles of operation</a></p>\n<ul>\n<li><a href=\"#summary\">Summary</a></li>\n</ul>\n</li>\n</ul>","html":"<h1>2 Kubernetes principles of operation</h1>\n<blockquote>\n<p>At the highest level, Kubernetes is two things:</p>\n<ul>\n<li>A cluster for running applications</li>\n<li>An orchestrator of cloud-native microservices apps</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>For production environments, multi-master high availability (HA) is a must have.</p>\n</blockquote>\n<blockquote>\n<p>Generally speaking, running 3 or 5 replicated masters in an HA (high availability) configuration is recommended.</p>\n</blockquote>\n<blockquote>\n<p>It's also considered a good practice not to run user applications on masters. This allows masters to concentrate entirely on managing the cluster.</p>\n</blockquote>\n<blockquote>\n<p>For an application to run on a Kubernetes cluster it needs to tick a few boxes. These include:</p>\n<ol>\n<li>Packaged as a container</li>\n<li>Wrapped in a Pod</li>\n<li>Deployed via a declarative manifest file</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>The declarative model and the concept of desired state are at the very heart of Kubernetes.</p>\n</blockquote>\n<blockquote>\n<p>containers must always run inside of Pods.</p>\n</blockquote>\n<blockquote>\n<p>The simplest model is to run a single container per POD. However, there are advanced use-cases that run multiple containers inside a single Pod.</p>\n</blockquote>\n<blockquote>\n<p>a Pod is a ring fenced environment to run containers. The pod itself doesn't actually run anything, it's just a sandbox for hosting containers.</p>\n</blockquote>\n<blockquote>\n<p>If you need to scale your app, you add or remove Pods.</p>\n</blockquote>\n<blockquote>\n<p>Services use labels and a label selector to know which set of pods to load balance traffic to. The service has a label selector that is a list of all the labels a Pod must posses in order for it to receive traffic from the Service.</p>\n</blockquote>\n<h2>Summary</h2>\n<p>K8 cluster is a bunch of nodes and a control plane. The control plane exposes an HTTP RESTful API, it assign work to nodes through the scheduler and records states in a persistent store. Nodes are responsible for running the applications.</p>\n<p><strong>Masters:</strong> Schedule decisions, perform monitoring, implement changes, respond to events, and more.</p>\n<ul>\n<li>\n<p>API Server: The grand Central Station of k8. </p>\n<ul>\n<li>All communication goes through here.</li>\n<li>Exposes the RESTful API</li>\n</ul>\n</li>\n<li>\n<p>Cluster Store: The heart of K8.</p>\n<ul>\n<li>The only stateful part of the control plane.</li>\n<li>Cluster store based on etcd.</li>\n<li>3-5 replicas of etcd for HA.</li>\n</ul>\n</li>\n<li>\n<p>Controller manager: Controller of Controllers.</p>\n<ul>\n<li>Applies control loops to ensure desired and current state are the same. Reconcile if they arent.</li>\n<li>Each control loop is very specialized.</li>\n</ul>\n</li>\n<li>\n<p>Scheduler: Watches for new work and assign it to workers.</p>\n<ul>\n<li>Applies Filter and ranking logic to the nodes</li>\n</ul>\n</li>\n<li>Cloud Controller manager: Integrates with cloud technologies</li>\n</ul>\n<p><strong>Nodes:</strong> Where applications runs.</p>\n<ol>\n<li>Watch the API Server for new work assignment</li>\n<li>Execute new work assignments</li>\n<li>Report back to the control plane</li>\n<li>\n<p>kubelet: Runs on every node in the cluster.</p>\n<ul>\n<li>Watches the API Server</li>\n</ul>\n</li>\n<li>\n<p>container runtime: Container related tasks</p>\n<ul>\n<li>Pull images, start and stop containers and so on ...</li>\n<li>Container Runtime Interface</li>\n<li>containerd is one of the popular options. It's the docker container runtime, which was donated by docker to cncf.</li>\n</ul>\n</li>\n<li>kub-proxy: Responsible for local networking.</li>\n</ol>\n<p>K8 clusters have an internal DNS. The DNS service has a static IP address that is hard-coded into every Pod on the cluster.</p>\n<p><strong>Pods</strong>: Atomic unit of K8.</p>\n<p><strong>Deployments:</strong> Higher level K8 object that wraps around a Pod and adds functionality.</p>\n<p><strong>Services</strong>: Provide reliable networking for a set of Pods.</p>\n<ul>\n<li>Consists of a stable DNS name , IP address, and port. </li>\n<li>Load balancer for pods</li>\n</ul>"}},"pageContext":{"title":"The Kubernetes Book"}},"staticQueryHashes":["1507822185","2095566405","2894216461","425755332"]}